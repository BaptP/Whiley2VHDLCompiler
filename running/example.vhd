------------------------------------------------------------
--             VHDL file generated by                     --
--              Whiley2VHDLCompiler                       --
------------------------------------------------------------


------------------------------------------------------------
-- Entity test
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity test is
  port (
    a       : in  signed(31 downto 0);
    clock   : in  boolean;
    start   : in  boolean;
    ret_0   : out boolean;
    done    : out boolean;
    clock_2 : in  boolean
  );
end entity test;


architecture Behavioural of test is

  signal a_2         : signed(31 downto 0);
  signal Unknown     : signed(31 downto 0);
  signal Rstart_reg0 : boolean;
  signal Rstart_reg1 : boolean;
  signal Ra          : signed(31 downto 0);
  signal Ra_reg0     : signed(31 downto 0);
  signal a_3         : signed(31 downto 0);
  signal Unknown_2   : signed(31 downto 0);
  signal Ra_2        : signed(31 downto 0);
  signal Ra_reg0_2   : signed(31 downto 0);
  signal Unknown_3   : signed(31 downto 0);

begin
  Unknown_3   <= to_signed(1, 32);

  Ra_2        <= a + Unknown_3;

  Unknown_2   <= to_signed(1, 32);

  Ra_reg0_2   <= Ra_2;

  Ra          <= a_3 - Unknown_2;

  Unknown     <= to_signed(0, 32);

  Ra_reg0     <= Ra;

  Rstart_reg1 <= start;

  ret_0       <= a_2 = Unknown;

  Registers: process(clock_2)
  begin
    done        <= Rstart_reg0;
    Rstart_reg0 <= Rstart_reg1;
    a_2         <= Ra_reg0;
    a_3         <= Ra_reg0_2;
  end process Registers;
end architecture Behavioural;
-- Entity test
------------------------------------------------------------



------------------------------------------------------------
-- Entity main
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity main is
  port (
    a       : in  signed(31 downto 0);
    clock   : in  boolean;
    start   : in  boolean;
    ret_0   : out signed(31 downto 0);
    done    : out boolean;
    clock_2 : in  boolean
  );
end entity main;


architecture Behavioural of main is
  component test
    port (
      a       : in  signed(31 downto 0);
      clock   : in  boolean;
      start   : in  boolean;
      ret_0   : out boolean;
      done    : out boolean;
      clock_2 : in  boolean
    );
  end component test;

  signal ret_01      : signed(31 downto 0);
  signal ret_00      : signed(31 downto 0);
  signal ret_02      : boolean;
  signal Rstart_reg0 : boolean;
  signal Rstart_reg1 : boolean;
  signal source_reg0 : signed(31 downto 0);
  signal source_reg1 : signed(31 downto 0);

begin
  test_2: test port map (
    a     => a,
    clock => ret_02
  );

  ret_00      <= to_signed(42, 32);

  source_reg1 <= a;

  Rstart_reg1 <= start;

  ret_0       <= 
      ret_01 when ret_02 else 
      ret_00

  Registers: process(clock_2)
  begin
    done        <= Rstart_reg0;
    Rstart_reg0 <= Rstart_reg1;
    ret_01      <= source_reg0;
    source_reg0 <= source_reg1;
  end process Registers;
end architecture Behavioural;
-- Entity main
------------------------------------------------------------



